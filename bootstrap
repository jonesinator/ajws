#!/bin/bash

set -e

if [ "$#" -ne 5 ]; then
    echo "./$0 install DEVICE HOSTNAME USERNAME PASSWORD"
    echo " Where DEVICE is the device where the operating system should be installed, e.g. /dev/sda."
    exit 1
fi

STEP=$1
DEVICE=$2
HOSTNAME=$3
USERNAME=$4
PASSWORD=$5

if [ "${STEP}" == "install" ]; then
    # Configure the SSD with btrfs.
    mkfs.btrfs -f -L ${HOSTNAME} ${DEVICE}
    mount ${DEVICE} /mnt
    cd /mnt
    btrfs subvolume create __active
    btrfs subvolume create __active/rootvol
    btrfs subvolume create __active/home
    btrfs subvolume create __active/var
    btrfs subvolume create __snapshots
    cd
    umount /mnt
    mount -o subvol=__active/rootvol ${DEVICE} /mnt
    mkdir /mnt/{home,var}
    mount -o subvol=__active/home ${DEVICE} /mnt/home
    mount -o subvol=__active/var ${DEVICE} /mnt/var

    # Bootstrap the operating system.
    wget -qO - "https://www.archlinux.org/mirrorlist/?country=US&protocol=http&ip_version=4&use_mirror_status=on" | \
        sed 's/^#Server/Server/' > /etc/pacman.d/mirrorlist
    pacstrap /mnt base base-devel
    genfstab -U -p /mnt >> /mnt/etc/fstab
    sed -i 's/relatime,ssd,space_cache/noatime,discard,ssd,autodefrag,compress=lzo,space_cache/' /mnt/etc/fstab
    mkdir /mnt/defvol
    printf "LABEL=${HOSTNAME} /mnt/defvol btrfs rw,noatime,discard,ssd,autodefrag,compress=lzo,space_cache 0 0" >> /mnt/etc/fstab
    cp -L -u `realpath $0` /mnt/root/bootstrap
    arch-chroot /mnt /bin/bash -c "/root/bootstrap chroot ${DEVICE} ${HOSTNAME} ${USERNAME} ${PASSWORD}"
    rm /mnt/etc/resolv.conf
    ln -sf /run/systemd/resolve/resolv.conf /mnt/etc/resolv.conf
    rm /mnt/root/bootstrap
    sync && umount -R /mnt
    shutdown -r now

elif [ "${STEP}" == "chroot" ]; then
    # Standard boostrapping setup.
    echo ${HOSTNAME} > /etc/hostname
    ln -sf /usr/share/zoneinfo/America/Denver > /etc/localtime
    sed -i '/^#en_US.UTF-8/s/^#//' /etc/locale.gen
    locale-gen
    echo "LANG=en_US.UTF-8" > /etc/locale.conf
    echo "KEYMAP=us" > /etc/vconsole.conf
    echo "FONT=lat9w-16" >> /etc/vconsole.conf
    hwclock --systohc --utc

    # I know this fails due to btrfs weirdness.
    set +e
    mkinitcpio -p linux
    set -e

    # Configure non-root user.
    useradd -m -g wheel -s /bin/bash ${USERNAME}
    echo "root:${PASSWORD}" | chpasswd
    echo "${USERNAME}:${PASSWORD}" | chpasswd
    sed -i '/^# %wheel ALL=(ALL) ALL/s/^# //' /etc/sudoers

    # Configure networking.
    printf '[Match]\nName=en*\n[Network]\nDHCP=yes' > /etc/systemd/network/dhcp.network
    pacman --noconfirm -S openssh
    systemctl enable systemd-networkd.service
    systemctl enable systemd-resolved.service
    systemctl enable sshd.socket

    # Configure bootloader.
    pacman --noconfirm -S grub
    grub-install --target=i386-pc --recheck ${DEVICE}
    grub-mkconfig -o /boot/grub/grub.cfg

    # Configure pacman for atlassian and yaourt.
    curl https://www.hipchat.com/keys/hipchat-linux.key | GNUPGHOME=/etc/pacman.d/gnupg gpg --import
    cat <<- 'EOF' >> /etc/pacman.conf
	[atlassian]
	SigLevel = PackageOptional DatabaseRequired TrustAll
	Server = http://downloads.hipchat.com/linux/arch/$arch
	[archlinuxfr]
	SigLevel = Never
	Server = http://repo.archlinux.fr/$arch
	EOF

    # Update the system and install several packages.
    pacman --noconfirm -Syyu
    pacman --noconfirm -S ttf-inconsolata
    pacman --noconfirm -S git
    pacman --noconfirm -S mercurial
    pacman --noconfirm -S vim
    pacman --noconfirm -S sudo
    pacman --noconfirm -S xorg-server
    pacman --noconfirm -S xorg-xrandr
    pacman --noconfirm -S xorg-xinit
    pacman --noconfirm -S xorg-xdpyinfo
    pacman --noconfirm -S xorg-xrdb
    pacman --noconfirm -S xf86-video-nouveau
    pacman --noconfirm -S rxvt-unicode
    pacman --noconfirm -S i3
    pacman --noconfirm -S alsa-utils
    pacman --noconfirm -S gstreamer0.10-base
    pacman --noconfirm -S gstreamer0.10
    pacman --noconfirm -S hipchat
    pacman --noconfirm -S yaourt
    yaourt --noconfirm -S spotify

    # Prepare some config files.
    echo "exec i3" > /home/${USERNAME}/.xinitrc
    echo '[[ -z $DISPLAY && $XDG_VTNR -eq 1 ]] && exec startx' >> /home/${USERNAME}/.bash_profile
    echo "blacklist pcspkr" > /etc/modprobe.d/nobeep.conf
    cat <<- 'EOF' >> /etc/X11/xorg.conf.d/20-nouveau.conf
	Section "Monitor"
	    Identifier "DellLeft"
	    Option "PreferredMode" "26x0x1600_60.00"
	    DisplaySize 641.3 401.8
	EndSection

	Section "Monitor"
	    Identifier "DellRight"
	    Option "PreferredMode" "26x0x1600_60.00"
	    Option "LeftOf" "DellLeft"
	    DisplaySize 641.3 401.8
	EndSection

	Section "Device"
	    Identifier "nvidia card"
	    Driver "nouveau"
	    Option "Monitor-DVI-D-1" "DellLeft"
	    Option "Monitor-DVI-I-1" "DellRight"
	EndSection

	Section "Screen"
	    Identifier "screen1"
	    Monitor "DellLeft"
	    DefaultDepth 24
	    SubSection "Display"
	        Depth 24
	        Virtual 2560 1600
	    EndSubSection
	    Device "nvidia card"
	EndSection

	Section "ServerLayout"
	    Identifier "layout1"
	    Screen "screen1"
	EndSection
	EOF
fi
